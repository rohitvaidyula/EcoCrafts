{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { sizeFromShape } from '../util';\nimport { op } from './operation';\n/**\r\n * Creates a `tf.Tensor` with values sampled from a random number generator\r\n * function defined by the user.\r\n *\r\n * @param shape An array of integers defining the output tensor shape.\r\n * @param randFunction A random number generator function which is called\r\n * for each element in the output tensor.\r\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\r\n */\nfunction rand_(shape, randFunction, dtype) {\n  const size = sizeFromShape(shape);\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  for (let i = 0; i < size; i++) {\n    values[i] = randFunction();\n  }\n  return ENGINE.makeTensor(values, shape, dtype);\n}\nexport const rand = op({\n  rand_\n});","map":null,"metadata":{},"sourceType":"module"}