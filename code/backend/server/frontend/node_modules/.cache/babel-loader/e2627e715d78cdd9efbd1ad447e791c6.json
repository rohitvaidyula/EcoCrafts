{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npotn\\\\OneDrive\\\\Documents\\\\GitHub\\\\CEM\\\\code\\\\frontend\\\\src\\\\App.js\";\n// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n// 1. TODO - Import required model here\n// e.g. import * as tfmodel from \"@tensorflow-models/tfmodel\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\nimport Description from \"C:/Users/npotn/OneDrive/Documents/GitHub/CEM/code/frontend/src/components/Description.js\";\n\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    // 3. TODO - Load network \n    // e.g. const net = await cocossd.load();\n    const net = await cocossd.load();\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      // e.g. const obj = await net.detect(video);\n      const obj = await net.detect(video);\n      console.log(obj);\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n      drawRect(obj, ctx);\n    }\n  };\n  useEffect(() => {\n    runCoco();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    muted: true,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 870,\n      top: 300,\n      // Adjust the top property to move the webcam element up or down\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 8,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useRef","useState","useEffect","tf","cocossd","Webcam","drawRect","Description","App","webcamRef","canvasRef","runCoco","net","load","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","obj","console","log","ctx","getContext","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","muted","style","position","marginLeft","marginRight","left","right","top","textAlign","zindex"],"sources":["C:/Users/npotn/OneDrive/Documents/GitHub/CEM/code/frontend/src/App.js"],"sourcesContent":["// Import dependencies\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n// 1. TODO - Import required model here\r\n// e.g. import * as tfmodel from \"@tensorflow-models/tfmodel\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawRect } from \"./utilities\";\r\nimport Description from \"C:/Users/npotn/OneDrive/Documents/GitHub/CEM/code/frontend/src/components/Description.js\";\r\n\r\n// 2. TODO - Import drawing utility here\r\n// e.g. import { drawRect } from \"./utilities\";\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Main function\r\n  const runCoco = async () => {\r\n    // 3. TODO - Load network \r\n    // e.g. const net = await cocossd.load();\r\n    const net = await cocossd.load();\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // 4. TODO - Make Detections\r\n      // e.g. const obj = await net.detect(video);\r\n      const obj = await net.detect(video);\r\n      console.log(obj);\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      // 5. TODO - Update drawing utility\r\n      // drawSomething(obj, ctx)  \r\n      drawRect(obj, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runCoco()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Description />\r\n      <header className=\"App-header\"> \r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 870,\r\n            top: 300, // Adjust the top property to move the webcam element up or down\r\n            textAlign: \"center\",\r\n            zindex: 9, \r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}