{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { RandGamma } from './rand_util';\n/**\r\n * Creates a `tf.Tensor` with values sampled from a gamma distribution.\r\n *\r\n * ```js\r\n * tf.randomGamma([2, 2], 1).print();\r\n * ```\r\n *\r\n * @param shape An array of integers defining the output tensor shape.\r\n * @param alpha The shape parameter of the gamma distribution.\r\n * @param beta The inverse scale parameter of the gamma distribution. Defaults\r\n *     to 1.\r\n * @param dtype The data type of the output. Defaults to float32.\r\n * @param seed The seed for the random number generator.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Random'}\r\n */\nfunction randomGamma_(shape, alpha, beta = 1, dtype = 'float32', seed) {\n  if (beta == null) {\n    beta = 1;\n  }\n  if (dtype == null) {\n    dtype = 'float32';\n  }\n  if (dtype !== 'float32' && dtype !== 'int32') {\n    throw new Error(`Unsupported data type ${dtype}`);\n  }\n  const rgamma = new RandGamma(alpha, beta, dtype, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = rgamma.nextValue();\n  }\n  return res.toTensor();\n}\nexport const randomGamma = op({\n  randomGamma_\n});","map":null,"metadata":{},"sourceType":"module"}