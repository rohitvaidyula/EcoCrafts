{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\r\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\r\n *\r\n * The same functionality can be achieved with `tf.tensor`, but in general\r\n * we recommend using `tf.tensor1d` as it makes the code more readable.\r\n *\r\n * ```js\r\n * tf.tensor1d([1, 2, 3]).print();\r\n * ```\r\n *\r\n * @param values The values of the tensor. Can be array of numbers,\r\n *     or a `TypedArray`.\r\n * @param dtype The data type.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\nexport function tensor1d(values, dtype) {\n  assertNonNull(values);\n  const inferredShape = inferShape(values, dtype);\n  if (inferredShape.length !== 1) {\n    throw new Error('tensor1d() requires values to be a flat/TypedArray');\n  }\n  const shape = null;\n  return makeTensor(values, shape, inferredShape, dtype);\n}","map":null,"metadata":{},"sourceType":"module"}