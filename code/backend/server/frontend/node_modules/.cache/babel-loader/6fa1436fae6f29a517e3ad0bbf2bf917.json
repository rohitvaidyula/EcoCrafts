{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Atan2 } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\r\n * Supports broadcasting.\r\n *\r\n * ```js\r\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\r\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\r\n *\r\n * tf.atan2(a, b).print()\r\n * ```\r\n *\r\n * @param a The first tensor.\r\n * @param b The second tensor. Must have the same dtype as `a`.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\nfunction atan2_(a, b) {\n  let $a = convertToTensor(a, 'a', 'atan2');\n  let $b = convertToTensor(b, 'b', 'atan2');\n  [$a, $b] = makeTypesMatch($a, $b);\n  const inputs = {\n    a: $a,\n    b: $b\n  };\n  return ENGINE.runKernel(Atan2, inputs);\n}\nexport const atan2 = op({\n  atan2_\n});","map":null,"metadata":{},"sourceType":"module"}