{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an AS IS BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { uniqueImplCPU } from '../kernel_utils/shared';\nimport { assertNotComplex } from '../webgl_util';\nexport function unique(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    axis\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  assertNotComplex(x, 'unique');\n  // For now, always forward calculation to the CPU backend.\n  console.warn('WARNING: ', 'UI might be locked temporarily as data is being downloaded');\n  const values = backend.readSync(x.dataId);\n  const {\n    outputValues,\n    outputShape,\n    indices\n  } = uniqueImplCPU(values, axis, x.shape, x.dtype);\n  return [backend.makeTensorInfo(outputShape, x.dtype, outputValues), backend.makeTensorInfo([indices.length], 'int32', indices)];\n}\nexport const uniqueConfig = {\n  kernelName: Unique,\n  backendName: 'webgl',\n  kernelFunc: unique\n};","map":null,"metadata":{},"sourceType":"module"}