{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { ExpandDims } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\r\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\r\n * into the tensor's shape.\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1, 2, 3, 4]);\r\n * const axis = 1;\r\n * x.expandDims(axis).print();\r\n * ```\r\n *\r\n * @param x The input tensor whose dimensions to be expanded.\r\n * @param axis The dimension index at which to insert shape of `1`. Defaults\r\n *     to 0 (the first dimension).\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\r\n */\nfunction expandDims_(x, axis = 0) {\n  const $x = convertToTensor(x, 'x', 'expandDims', 'string_or_numeric');\n  util.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n  const inputs = {\n    input: $x\n  };\n  const attrs = {\n    dim: axis\n  };\n  return ENGINE.runKernel(ExpandDims, inputs, attrs);\n}\nexport const expandDims = op({\n  expandDims_\n});","map":null,"metadata":{},"sourceType":"module"}