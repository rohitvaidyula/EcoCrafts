{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * =============================================================================\r\n */\nimport { Dataset } from '../dataset';\n/**\r\n * Represents a potentially large collection of text lines.\r\n *\r\n * The results are not batched.\r\n */\nexport class TextLineDataset extends Dataset {\n  /**\r\n   * Create a `TextLineDataset`.\r\n   *\r\n   * @param input A `DataSource` providing a chunked, UTF8-encoded byte stream.\r\n   */\n  constructor(input) {\n    super();\n    this.input = input;\n  }\n  async iterator() {\n    const inputIterator = await this.input.iterator();\n    const utf8Iterator = inputIterator.decodeUTF8();\n    const lineIterator = utf8Iterator.split('\\n').map(line => {\n      // Windows/DOS format text file has extra line breaker at the end of line.\n      if (line.endsWith('\\r')) {\n        line = line.slice(0, -1);\n      }\n      return line;\n    });\n    return lineIterator;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}