{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { complex } from '../kernels/Complex';\n/**\r\n * Generates a tensorInfo with all zeros value.\r\n * @param backend cpu backend.\r\n * @param shape Shape for the zeros tensor.\r\n * @param dtype Optional. If set, the result has this dtype.\r\n */\nexport function zeros(backend, shape, dtype = 'float32') {\n  if (dtype === 'complex64') {\n    const real = zeros(backend, shape, 'float32');\n    const imag = zeros(backend, shape, 'float32');\n    return complex({\n      inputs: {\n        real,\n        imag\n      },\n      backend\n    });\n  }\n  const values = util.makeZerosTypedArray(util.sizeFromShape(shape), dtype);\n  return backend.makeTensorInfo(shape, dtype, values);\n}","map":null,"metadata":{},"sourceType":"module"}