{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { squeezeShape } from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\r\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\r\n *\r\n * ```js\r\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\r\n * x.squeeze().print();\r\n * ```\r\n *\r\n * @param x The input tensor to be squeezed.\r\n * @param axis An optional list of numbers. If specified, only\r\n *     squeezes the dimensions listed. The dimension index starts at 0. It\r\n * is an error to squeeze a dimension that is not 1.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\r\n */\nfunction squeeze_(x, axis) {\n  const $x = convertToTensor(x, 'x', 'squeeze');\n  return reshape($x, squeezeShape($x.shape, axis).newShape);\n}\nexport const squeeze = op({\n  squeeze_\n});","map":null,"metadata":{},"sourceType":"module"}