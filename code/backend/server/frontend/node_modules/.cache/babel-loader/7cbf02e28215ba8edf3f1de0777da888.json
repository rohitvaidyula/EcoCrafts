{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\n/**\r\n * Explicit error types.\r\n *\r\n * See the following link for more information about why the code includes\r\n * calls to setPrototypeOf:\r\n *\r\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n */\n// tslint:enable\n/**\r\n * Equivalent of Python's AttributeError.\r\n */\nexport class AttributeError extends Error {\n  constructor(message) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, AttributeError.prototype);\n  }\n}\n/**\r\n * Equivalent of Python's RuntimeError.\r\n */\nexport class RuntimeError extends Error {\n  constructor(message) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, RuntimeError.prototype);\n  }\n}\n/**\r\n * Equivalent of Python's ValueError.\r\n */\nexport class ValueError extends Error {\n  constructor(message) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, ValueError.prototype);\n  }\n}\n/**\r\n * Equivalent of Python's NotImplementedError.\r\n */\nexport class NotImplementedError extends Error {\n  constructor(message) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, NotImplementedError.prototype);\n  }\n}\n/**\r\n * Equivalent of Python's AssertionError.\r\n */\nexport class AssertionError extends Error {\n  constructor(message) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, AssertionError.prototype);\n  }\n}\n/**\r\n * Equivalent of Python's IndexError.\r\n */\nexport class IndexError extends Error {\n  constructor(message) {\n    super(message);\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, IndexError.prototype);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}