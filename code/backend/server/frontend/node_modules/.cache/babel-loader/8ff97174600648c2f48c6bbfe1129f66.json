{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Cast } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\r\n * Casts a `tf.Tensor` to a new dtype.\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([1.5, 2.5, 3]);\r\n * tf.cast(x, 'int32').print();\r\n * ```\r\n * @param x The input tensor to be casted.\r\n * @param dtype The dtype to cast the input tensor to.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\r\n */\nfunction cast_(x, dtype) {\n  const $x = convertToTensor(x, 'x', 'cast');\n  // Sanity checks.\n  if (!util.isValidDtype(dtype)) {\n    throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n  }\n  if (dtype === 'string' && $x.dtype !== 'string' || dtype !== 'string' && $x.dtype === 'string') {\n    throw new Error('Only strings can be casted to strings');\n  }\n  const inputs = {\n    x: $x\n  };\n  const attrs = {\n    dtype\n  };\n  return ENGINE.runKernel(Cast, inputs, attrs);\n}\nexport const cast = op({\n  cast_\n});","map":null,"metadata":{},"sourceType":"module"}