{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Softmax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes the softmax normalized vector given the logits.\r\n *\r\n * ```js\r\n * const a = tf.tensor1d([1, 2, 3]);\r\n *\r\n * a.softmax().print();  // or tf.softmax(a)\r\n * ```\r\n *\r\n * ```js\r\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\r\n *\r\n * a.softmax().print();  // or tf.softmax(a)\r\n * ```\r\n *\r\n * @param logits The logits array.\r\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\r\n *     which indicates the last dimension.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Normalization'}\r\n */\nfunction softmax_(logits, dim = -1) {\n  const $logits = convertToTensor(logits, 'logits', 'softmax', 'float32');\n  if (dim === -1) {\n    dim = $logits.rank - 1;\n  }\n  if (dim !== $logits.rank - 1) {\n    throw Error('Softmax along a non-last dimension is not yet supported. ' + `Logits was rank ${$logits.rank} and dim was ${dim}`);\n  }\n  const inputs = {\n    logits: $logits\n  };\n  const attrs = {\n    dim\n  };\n  return ENGINE.runKernel(Softmax, inputs, attrs);\n}\nexport const softmax = op({\n  softmax_\n});","map":null,"metadata":{},"sourceType":"module"}