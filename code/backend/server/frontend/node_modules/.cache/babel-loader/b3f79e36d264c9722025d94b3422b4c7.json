{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Range } from '../kernel_names';\n/**\r\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\r\n *\r\n * The tensor is a is half-open interval meaning it includes start, but\r\n * excludes stop. Decrementing ranges and negative step values are also\r\n * supported.sv\r\n *\r\n *\r\n * ```js\r\n * tf.range(0, 9, 2).print();\r\n * ```\r\n *\r\n * @param start An integer start value\r\n * @param stop An integer stop value\r\n * @param step An integer increment (will default to 1 or -1)\r\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\nexport function range(start, stop, step = 1, dtype = 'float32') {\n  if (step === 0) {\n    throw new Error('Cannot have a step of zero');\n  }\n  const attrs = {\n    start,\n    stop,\n    step,\n    dtype\n  };\n  return ENGINE.runKernel(Range, {} /* inputs */, attrs);\n}","map":null,"metadata":{},"sourceType":"module"}