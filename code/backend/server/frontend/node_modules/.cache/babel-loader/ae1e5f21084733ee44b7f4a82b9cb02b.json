{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { makeOnesTypedArray, sizeFromShape } from '../util';\nimport { complex } from './complex';\nimport { zeros } from './zeros';\n/**\r\n * Creates a `tf.Tensor` with all elements set to 1.\r\n *\r\n * ```js\r\n * tf.ones([2, 2]).print();\r\n * ```\r\n *\r\n * @param shape An array of integers defining the output tensor shape.\r\n * @param dtype The type of an element in the resulting tensor. Defaults to\r\n *     'float'.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\nexport function ones(shape, dtype = 'float32') {\n  if (dtype === 'complex64') {\n    const real = ones(shape, 'float32');\n    const imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n  const values = makeOnesTypedArray(sizeFromShape(shape), dtype);\n  return ENGINE.makeTensor(values, shape, dtype);\n}","map":null,"metadata":{},"sourceType":"module"}