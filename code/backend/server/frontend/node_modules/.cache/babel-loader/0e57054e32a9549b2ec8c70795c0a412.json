{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Relu6 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\r\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([-1, 2, -3, 8]);\r\n *\r\n * x.relu6().print();  // or tf.relu6(x)\r\n * ```\r\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\r\n *     `int32'.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\nfunction relu6_(x) {\n  const $x = convertToTensor(x, 'x', 'relu6');\n  const inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Relu6, inputs);\n}\nexport const relu6 = op({\n  relu6_\n});","map":null,"metadata":{},"sourceType":"module"}