{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\n/**\r\n * Creates a new variable with the provided initial value.\r\n * ```js\r\n * const x = tf.variable(tf.tensor([1, 2, 3]));\r\n * x.assign(tf.tensor([4, 5, 6]));\r\n *\r\n * x.print();\r\n * ```\r\n *\r\n * @param initialValue Initial value for the tensor.\r\n * @param trainable If true, optimizers are allowed to update it.\r\n * @param name Name of the variable. Defaults to a unique id.\r\n * @param dtype If set, initialValue will be converted to the given type.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\nexport function variable(initialValue, trainable = true, name, dtype) {\n  return ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}","map":null,"metadata":{},"sourceType":"module"}