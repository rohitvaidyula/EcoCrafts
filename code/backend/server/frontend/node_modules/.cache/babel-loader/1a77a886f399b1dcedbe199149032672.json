{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../../engine';\nimport { FFT } from '../../kernel_names';\nimport { assert } from '../../util';\nimport { op } from '../operation';\n/**\r\n * Fast Fourier transform.\r\n *\r\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\r\n * dimension of input.\r\n *\r\n * ```js\r\n * const real = tf.tensor1d([1, 2, 3]);\r\n * const imag = tf.tensor1d([1, 2, 3]);\r\n * const x = tf.complex(real, imag);\r\n *\r\n * x.fft().print();  // tf.spectral.fft(x).print();\r\n * ```\r\n * @param input The complex input to compute an fft over.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\r\n */\nfunction fft_(input) {\n  assert(input.dtype === 'complex64', () => `The dtype for tf.spectral.fft() must be complex64 ` + `but got ${input.dtype}.`);\n  const inputs = {\n    input\n  };\n  return ENGINE.runKernel(FFT, inputs);\n}\nexport const fft = op({\n  fft_\n});","map":null,"metadata":{},"sourceType":"module"}