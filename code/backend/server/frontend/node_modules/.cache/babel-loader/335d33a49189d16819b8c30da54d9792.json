{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { ENGINE } from '../engine';\nimport { Erf } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\r\n * Computes gause error function of the input `tf.Tensor` element-wise:\r\n * `erf(x)`\r\n *\r\n * ```js\r\n * const x = tf.tensor1d([0, .1, -.1, .7]);\r\n *\r\n * x.erf().print(); // or tf.erf(x);\r\n * ```\r\n * @param x The input tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Basic math'}\r\n */\nfunction erf_(x) {\n  let $x = convertToTensor(x, 'x', 'erf');\n  util.assert($x.dtype === 'int32' || $x.dtype === 'float32', () => 'Input dtype must be `int32` or `float32`.');\n  if ($x.dtype === 'int32') {\n    $x = cast($x, 'float32');\n  }\n  const inputs = {\n    x: $x\n  };\n  return ENGINE.runKernel(Erf, inputs);\n}\nexport const erf = op({\n  erf_\n});","map":null,"metadata":{},"sourceType":"module"}