{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\n/**\r\n * Utilities related to persistent state in the backend.\r\n */\n/**\r\n * An ID to track `tf.SymbolicTensor`s and derived classes.\r\n * Required in different places in engine/topology.ts to identify unique\r\n * tensors.\r\n */\nlet _nextUniqueTensorId = 0;\nexport function getNextUniqueTensorId() {\n  return _nextUniqueTensorId++;\n}\nconst _uidPrefixes = {};\n/**\r\n * Provides a unique UID given a string prefix.\r\n *\r\n * @param prefix\r\n */\nexport function getUid(prefix = '') {\n  if (!(prefix in _uidPrefixes)) {\n    _uidPrefixes[prefix] = 0;\n  }\n  _uidPrefixes[prefix] += 1;\n  return prefix + _uidPrefixes[prefix].toString();\n}","map":null,"metadata":{},"sourceType":"module"}