{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2020 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the License);\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an AS IS BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nimport { Prelu } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nconst preluImpl = createSimpleBinaryKernelImpl((xValue, aValue) => xValue < 0 ? aValue * xValue : xValue);\nexport function prelu(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x,\n    alpha\n  } = inputs;\n  assertNotComplex([x, alpha], 'prelu');\n  const aVals = backend.data.get(x.dataId).values;\n  const bVals = backend.data.get(alpha.dataId).values;\n  const [resultData, resultShape] = preluImpl(x.shape, alpha.shape, aVals, bVals, x.dtype);\n  return backend.makeTensorInfo(resultShape, x.dtype, resultData);\n}\nexport const preluConfig = {\n  kernelName: Prelu,\n  backendName: 'cpu',\n  kernelFunc: prelu\n};","map":null,"metadata":{},"sourceType":"module"}